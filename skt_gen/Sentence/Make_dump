SHELL=/bin/sh

include ../../paths.sh

FILES = dump.ml
SYNTAX = .ocamlinit
ZEN=$(ZENDIR)
HPATH=../../MT/prog/kAraka/Prepare_Graph/Heritage_ML

all: dump

LIBPATH = LPATH
FLEX = lex
CC = gcc
CFLAGS = -L$(LIBPATH) -g -Wall -o

COMPILE=ocamlopt -pp "camlp4r pa_extend.cmo" -I $(ZEN)  -I $(HPATH) -I +camlp4 -c

COMPILEI=ocamlc -pp "camlp4r pa_extend.cmo" -I $(ZEN)  -I $(HPATH) -I +camlp4 -c

LINK=ocamlopt -I $(ZEN) -I +camlp4 dynlink.cmxa camlp4lib.cmxa

SOURCES= $(INTERFACES) $(FILES) $(HPATH)/transduction.ml $(HPATH)/min_lexer.ml

CORE=$(ZEN)/list2.cmx $(ZEN)/ascii.cmx $(ZEN)/gen.cmx $(ZEN)/trie.cmx $(ZEN)/zen_lexer.cmx

EXECS=$(HPATH)/min_lexer.cmx $(HPATH)/transduction.cmx 

dump: dump.cmx
	$(LINK) unix.cmxa $(CORE) $(EXECS) dump.cmx -o dump
	
.depend depend:: $(SOURCES)
	> .depend.new
	for i in $(ZENSOURCES); do \
	ocamldep -pp camlp4rf -I $(ZEN) -I . $(ZEN)/$$i >> .depend.new ; done
	for i in $(SOURCES); do \
	ocamldep -pp camlp4rf -I $(ZEN) -I . $$i >> .depend.new ; done
	mv .depend.new .depend
.SUFFIXES: .ml .mli .cmx .cmo .cmi

.ml.cmo:
	$(COMPILEI) $<

.mli.cmi:
	$(COMPILEI) $<

.ml.cmx:
	$(COMPILE) $<

include .depend

clean:
	rm -f *.cmo *.cmi *.cmx *.ppi *.ppo *.o
